@{
    ViewData["Title"] = "Patient Dashboard";
    Layout = "_Layout";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Personal Information</h5>
                    <div id="profileInfo">
                        Loading...
                    </div>
                    <button class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                        Edit Profile
                    </button>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">My Appointments</h5>
                    <div class="d-flex justify-content-between mb-3">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="tab" href="#upcoming">Upcoming</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#past">Past</a>
                            </li>
                        </ul>
                        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#newAppointmentModal">
                            New Appointment
                        </button>
                    </div>
                    <div class="tab-content">
                        <div id="upcoming" class="tab-pane fade show active">
                            <div id="upcomingAppointments">
                                Loading...
                            </div>
                        </div>
                        <div id="past" class="tab-pane fade">
                            <div id="pastAppointments">
                                Loading...
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editProfileForm">
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="email">
                    </div>
                    <div class="mb-3">
                        <label for="dateOfBirth" class="form-label">Date of Birth</label>
                        <input type="date" class="form-control" id="dateOfBirth" name="dateOfBirth">
                    </div>
                    <div class="mb-3">
                        <label for="gender" class="form-label">Gender</label>
                        <select class="form-select" id="gender" name="gender">
                            <option value="">Select gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="bloodType" class="form-label">Blood Type</label>
                        <select class="form-select" id="bloodType" name="bloodType">
                            <option value="">Select blood type</option>
                            <option value="A+">A+</option>
                            <option value="A-">A-</option>
                            <option value="B+">B+</option>
                            <option value="B-">B-</option>
                            <option value="AB+">AB+</option>
                            <option value="AB-">AB-</option>
                            <option value="O+">O+</option>
                            <option value="O-">O-</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="weight" class="form-label">Weight (kg)</label>
                        <input type="number" step="0.1" class="form-control" id="weight" name="weight">
                    </div>
                    <div class="mb-3">
                        <label for="height" class="form-label">Height (cm)</label>
                        <input type="number" step="0.1" class="form-control" id="height" name="height">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveProfileBtn">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- New Appointment Modal -->
<div class="modal fade" id="newAppointmentModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Schedule New Appointment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="newAppointmentForm">
                    <div class="mb-3">
                        <label for="clinicSelect" class="form-label">Select Clinic</label>
                        <select class="form-select" id="clinicSelect" required>
                            <option value="">Choose a clinic...</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="doctorSelect" class="form-label">Select Doctor</label>
                        <select class="form-select" id="doctorSelect" required>
                            <option value="">Choose a doctor...</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="appointmentDate" class="form-label">Date</label>
                        <input type="date" class="form-control" id="appointmentDate" required 
                               min="" onload="this.min = new Date().toISOString().split('T')[0]">
                    </div>
                    <div class="mb-3">
                        <label for="appointmentTime" class="form-label">Time</label>
                        <input type="time" class="form-control" id="appointmentTime" required>
                    </div>
                    <div class="mb-3">
                        <label for="symptoms" class="form-label">Symptoms</label>
                        <textarea class="form-control" id="symptoms" rows="3" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveAppointmentBtn">Schedule Appointment</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            loadProfile();
            loadAppointments();
            loadClinics();

            // Set min date for appointment date input when modal opens
            $('#newAppointmentModal').on('show.bs.modal', function () {
                var today = new Date().toISOString().split('T')[0];
                $('#appointmentDate').attr('min', today);
                $('#appointmentDate').val(today);
            });

            $('#clinicSelect').change(loadDoctors);
            $('#saveProfileBtn').click(saveProfile);
            $('#saveAppointmentBtn').click(saveAppointment);
        });

        function loadProfile() {
            $.get('/api/Users/profile', function (profile) {
                var html = `
                    <p><strong>Name:</strong> ${profile.firstName} ${profile.lastName}</p>
                    <p><strong>Email:</strong> ${profile.email}</p>
                `;
                if (profile.dateOfBirth) html += `<p><strong>Date of Birth:</strong> ${new Date(profile.dateOfBirth).toLocaleDateString()}</p>`;
                if (profile.gender) html += `<p><strong>Gender:</strong> ${profile.gender}</p>`;
                if (profile.bloodType) html += `<p><strong>Blood Type:</strong> ${profile.bloodType}</p>`;
                if (profile.weight) html += `<p><strong>Weight:</strong> ${profile.weight} kg</p>`;
                if (profile.height) html += `<p><strong>Height:</strong> ${profile.height} cm</p>`;
                
                $('#profileInfo').html(html);

                // Populate edit form
                $('#email').val(profile.email);
                $('#dateOfBirth').val(profile.dateOfBirth ? new Date(profile.dateOfBirth).toISOString().split('T')[0] : '');
                $('#gender').val(profile.gender);
                $('#bloodType').val(profile.bloodType);
                $('#weight').val(profile.weight);
                $('#height').val(profile.height);
            });
        }

        function loadAppointments() {
            $.get('/api/Appointments', function (appointments) {
                var now = new Date();
                var upcoming = appointments.filter(a => new Date(a.appointmentDate) >= now);
                var past = appointments.filter(a => new Date(a.appointmentDate) < now);

                var upcomingHtml = upcoming.map(appointment => `
                    <div class="card mb-2">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="card-title">Date: ${new Date(appointment.appointmentDate).toLocaleString()}</h6>
                                    <p class="card-text">
                                        Doctor: ${appointment.doctor.firstName} ${appointment.doctor.lastName}<br>
                                        Clinic: ${appointment.clinic.name}<br>
                                        Status: ${appointment.status}
                                    </p>
                                </div>
                                <button class="btn btn-link text-danger cancel-appointment" 
                                        onclick="checkAndCancelAppointment(${appointment.appointmentId}, '${appointment.appointmentDate}')"
                                        style="font-size: 1.2rem; text-decoration: none;">
                                    ×
                                </button>
                            </div>
                        </div>
                    </div>
                `).join('') || 'No upcoming appointments';

                var pastHtml = past.map(appointment => `
                    <div class="card mb-2">
                        <div class="card-body">
                            <h6 class="card-title">Date: ${new Date(appointment.appointmentDate).toLocaleString()}</h6>
                            <p class="card-text">
                                Doctor: ${appointment.doctor.firstName} ${appointment.doctor.lastName}<br>
                                Clinic: ${appointment.clinic.name}<br>
                                Status: ${appointment.status}
                            </p>
                        </div>
                    </div>
                `).join('') || 'No past appointments';

                $('#upcomingAppointments').html(upcomingHtml);
                $('#pastAppointments').html(pastHtml);
            });
        }

        function loadClinics() {
            $.get('/api/Clinics', function (clinics) {
                $('#clinicSelect').empty().append('<option value="">Choose a clinic...</option>');
                clinics.forEach(function (clinic) {
                    $('#clinicSelect').append(`<option value="${clinic.clinicId}">${clinic.name}</option>`);
                });
            });
        }

        function loadDoctors() {
            var clinicId = $('#clinicSelect').val();
            if (!clinicId) {
                $('#doctorSelect').empty().append('<option value="">Choose a doctor...</option>');
                return;
            }

            $.get(`/api/Clinics/${clinicId}`, function (clinic) {
                $('#doctorSelect').empty().append('<option value="">Choose a doctor...</option>');
                clinic.doctors.forEach(function (doctor) {
                    $('#doctorSelect').append(`<option value="${doctor.doctorId}">${doctor.firstName} ${doctor.lastName}</option>`);
                });
            });
        }

        function saveProfile() {
            var profileData = {
                email: $('#email').val(),
                dateOfBirth: $('#dateOfBirth').val() || null,
                gender: $('#gender').val(),
                bloodType: $('#bloodType').val(),
                weight: $('#weight').val() ? parseFloat($('#weight').val()) : null,
                height: $('#height').val() ? parseFloat($('#height').val()) : null
            };

            $.ajax({
                url: '/api/Users/profile',
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(profileData),
                success: function () {
                    $('#editProfileModal').modal('hide');
                    loadProfile();
                    alert('Profile updated successfully!');
                },
                error: function (xhr) {
                    alert('Failed to update profile: ' + xhr.responseText);
                }
            });
        }

        function saveAppointment() {
            var appointmentDateTime = new Date($('#appointmentDate').val() + 'T' + $('#appointmentTime').val());
            var now = new Date();
            
            // Check if appointment date is in the past
            if (appointmentDateTime < now) {
                alert('Geçmiş tarihte randevu oluşturulamaz');
                return;
            }
            
            var appointmentData = {
                doctorId: parseInt($('#doctorSelect').val()),
                clinicId: parseInt($('#clinicSelect').val()),
                appointmentDate: appointmentDateTime.toISOString(),
                symptoms: $('#symptoms').val(),
                type: 'Regular'
            };

            $.ajax({
                url: '/api/Appointments',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(appointmentData),
                success: function () {
                    $('#newAppointmentModal').modal('hide');
                    loadAppointments();
                    alert('Appointment scheduled successfully!');
                },
                error: function (xhr) {
                    alert('Failed to schedule appointment: ' + xhr.responseText);
                }
            });
        }

        function checkAndCancelAppointment(appointmentId, appointmentDate) {
            const appointmentTime = new Date(appointmentDate);
            const now = new Date();
            const timeDifference = appointmentTime - now;
            const daysDifference = timeDifference / (1000 * 60 * 60 * 24);

            if (daysDifference < 1) {
                alert('Randevunuza 1 günden az süre kaldığı için iptal edilemiyor');
                return;
            }

            if (confirm('Randevunuzu iptal etmek istiyor musunuz?')) {
                cancelAppointment(appointmentId);
            }
        }

        function cancelAppointment(appointmentId) {
            $.ajax({
                url: `/api/Appointments/${appointmentId}`,
                type: 'DELETE',
                success: function() {
                    loadAppointments();
                    alert('Randevu başarıyla iptal edildi');
                },
                error: function(xhr) {
                    alert('Randevu iptal edilemedi: ' + xhr.responseText);
                }
            });
        }
    </script>
} 